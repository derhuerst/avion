// Generated by CoffeeScript 1.7.1
(function(peer) {
  var prettyFileSize, table, updateEntry;
  table = $('#transfer tbody');
  prettyFileSize = function(bytes) {
    var n, r;
    n = Math.floor(Math.log(bytes) / Math.log(1024));
    r = bytes / Math.pow(1024, n);
    r *= Math.pow(10, n - 1);
    r = Math.round(r);
    r /= Math.pow(10, n - 1);
    return r + ['b', 'k', 'm', 'g', 't'][n];
  };
  updateEntry = function() {
    this.dom.attr('class', this.status);
    switch (this.status) {
      case 'init':
        return this.dom.status.html('');
      case 'wait':
        return this.dom.status.html('\u2026');
      case 'transfer':
        if (this.mode === 'send') {
          return this.dom.status.html('\u2191');
        } else {
          return this.dom.status.html('\u2193');
        }
        break;
      case 'complete':
        return this.dom.status.html('\u2713');
      case 'error':
        return this.dom.status.html('!');
    }
  };
  peer.on('add', (function(_this) {
    return function(file) {
      file.dom = $('<tr></tr>').attr('id', file.id);
      file.dom.name = $('<td></td>').addClass('name').html(file.name);
      file.dom.size = $('<td></td>').addClass('size').html(prettyFileSize(file.size));
      file.dom.status = $('<td></td>').addClass('status');
      file.dom.append(file.dom.name);
      file.dom.append(file.dom.size);
      file.dom.append(file.dom.status);
      updateEntry.call(file);
      table.append(file.dom);
      file.on('init', updateEntry.bind(file));
      file.on('wait', updateEntry.bind(file));
      file.on('transfer', updateEntry.bind(file));
      file.on('complete', updateEntry.bind(file));
      return file.on('error', updateEntry.bind(file));
    };
  })(this));
  return peer.on('remove', function(file) {
    return $("#" + file.id).remove();
  });
})(window.peer);
